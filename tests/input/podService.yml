# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.8.3

# NOTE: The namespace sharing for a pod has been modified by the user and is not the same as the
# default settings for kubernetes. This can lead to unexpected behavior when running the generated
# kube yaml in a kubernetes cluster.
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2024-02-11T16:15:20Z"
  labels:
    app: podcounter
  name: podcounter
spec:
  ports:
  - name: "6379"
    nodePort: 31373
    port: 6379
    targetPort: 6379
  - name: "8080"
    nodePort: 30006
    port: 8080
    targetPort: 8080
  selector:
    app: podcounter
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2024-02-11T16:15:20Z"
  labels:
    app: podcounter
  name: podcounter
spec:
  containers:
  - args:
    - redis-server
    - --appendonly
    - "yes"
    - --notify-keyspace-events
    - Ex
    image: docker.io/library/redis:alpine
    name: counterredis1
    ports:
    - containerPort: 6379
    securityContext:
      readOnlyRootFilesystem: true
    volumeMounts:
    - mountPath: /data
      name: counter_redis-pvc
  - env:
    - name: REDIS_PORT
      value: "6379"
    - name: REDIS_HOST
      value: redis
    image: localhost/hello-py-aioweb:latest
    name: counterweb1
    ports:
    - containerPort: 8080
    securityContext:
      readOnlyRootFilesystem: true
  volumes:
  - name: counter_redis-pvc
    persistentVolumeClaim:
      claimName: counter_redis

