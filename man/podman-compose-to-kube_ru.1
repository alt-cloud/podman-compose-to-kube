.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "PODMAN\-COMPOSE\-TO\-KUBE" "1" "February 2024" "" ""
.
.SH "NAME"
\fBpodman\-compose\-to\-kube\fR \- генерации kubernetes манифестов на основе поднятого podman\-compose POD\'а
.
.SH "SYNOPSIS"
.
.nf


podman\-compose\-to\-kube \e
  [\-\-type(\-t) <deployment type>]\e
  [\-\-namespace(\-n) <namespace>]
  [\-\-dir(\-d) <manifests_directory>]\e
  [\-\-pvpath <PersistentVolume_directory>] \e
  [\-\-user <rootless_user>]\e
  [\-\-group <rootless_group>]\e
  [\-\-output(\-o) [yml|json]]\e
  [\-\-verbose(\-v)]\e
  <POD_name>\e
  <docker\-compose_file_name>
.
.fi
.
.SH "DESCRIPTION"
Скрипт поддержки миграции решений docker\-compose в kubernetes\.
.
.P
До вызова скрипта необходимо с помощью команды podman\-compose поднять стек сервисов в POD\'е и проверить его работоспособность (см\. podman\-compose как средство миграция docker\-compose решений в kubernetes \fIhttps://www\.altlinux\.org/Podman\-compose/kubernetes#%D0%AD%D0%BA%D1%81%D0%BF%D0%BE%D1%80%D1%82_%D1%80%D0%B0%D0%B7%D0%B2%D0%B5%D1%80%D0%BD%D1%83%D1%82%D0%BE%D0%B3%D0%BE_%D1%81%D1%82%D0%B5%D0%BA%D0%B0_%D0%B2_kubernetes\-%D0%BC%D0%B0%D0%BD%D0%B8%D1%84%D0%B5%D1%81%D1%82%D1%8B\fR)\.
.
.P
Скрипт podman\-compose\-to\-kube генерирует манифесты Kubernetes для развертывания указанного стека сервисов\. в \fBkubernetes\fR\. В качестве основы для генерации используется \fBPOD\fR, созданный командой \fBpodman\-compose\fR\.
.
.P
Манифесты генерируются в каталоге, указанном параметром \fB\-\-dir\fR (\fB\-d\fR) (по умолчания каталог \fBmanifests\fR)\. Каталог манифестов имеет следующую структуру:
.
.IP "" 4
.
.nf


manifests/
├── <namespace1>
│   ├── <pod1Name>
│   │   ├── Deployment
│   │   │   ├── <service1Name>\.yml
│   │   │   ├── <service2Name>\.yml
│   │   │   ├── PersistentVolume
│   │   │   │   └── <namespace1>\-<pod1Name>\-<service1Name>\.yml
│   │   │   ├── PersistentVolumeClaim
│   │   │   │   └── <pod1Name>\-<service1Name>\.yml
│   │   │   └── Service
│   │   │       ├── <service1Name>\.yml
│   │   │       └── <service2Name>\.yml
│   │   └── Pod
│   │       ├── <pod1Name>\.yml
│   │       ├── PersistentVolume
│   │       │   └── <namespace1>\-<pod1Name>\-<service1Name>\.yml
│   │       ├── PersistentVolumeClaim
│   │       │   └── <pod1Name>\-<service1Name>\.yml
│   │       └── Service
│   │           └── <pod1Name>\.yml
│   └── <pod2Name>
│       ├── Deployment
│       │   ├── \.\.\.
│       └── Pod
│           ├── \.\.\.
└── <namespace2>
    └── <pod3Name>
        └── \.\.\.
.
.fi
.
.IP "" 0
.
.P
Каталог манифестов (по умолчанию \fBmanifests\fR) содержит подкаталоги \fBnamespace\fRов\.
.
.P
В рамках каталога \fBnamespace\fR для каждого генерируемого набора манифестов создается отдельный каталог для каждого \fBPod\fR\'а\. Имя каталога формируется из имени \fBPod\fR\'а путем удаления префикса \fBpod\fR\.
.
.P
В каталоге \fBPod\fR\'а для каждого типа разворачивания (\fBPod\fR, \fBDeployment\fR) создается подкаталог, содержащий YML\-файлы манифестов:
.
.IP "\(bu" 4
файлы манифестов \fB*\.yml\fR \- файлы разворачивания контейнеров (\fBkind: Pod\fR, \fBkind: Deployment\fR);
.
.IP "\(bu" 4
каталог \fBService\fR с YML\-файлами описания сервисов (\fBkind: Service\fR);
.
.IP "\(bu" 4
каталог \fBPersistentVolumeClaim\fR с YML\-файлами описания запросов на внешние тома (\fBkind: PersistentVolumeClaim\fR);
.
.IP "\(bu" 4
каталог \fBPersistentVolume\fR с YML\-файлами описания описание внешних локальных томов (\fBkind: PersistentVolume\fR)\.
.
.IP "" 0
.
.P
Файлы каталога \fBPersistentVolume\fR описания описание внешних локальных томов имеют ссылки на соответствующие файлы YML\- описания запросов на внешние тома каталога \fBPersistentVolumeClaim\fR\.
.
.P
Данный формат размещения YML\-файлов манифестов позволяет разворачивать kubernetes\-решение одной командой:
.
.IP "" 4
.
.nf


kubectl apply \-R \-f manifests/<namespace1>/<podName>/Pod
.
.fi
.
.IP "" 0
.
.P
для POD\-разворачивания или
.
.IP "" 4
.
.nf


kubectl apply \-R \-f manifests/<namespace1>/<podName>/Deployment
.
.fi
.
.IP "" 0
.
.P
для Deployment\-разворачивания\.
.
.br
.
.br
А также удалять разворачивание:
.
.IP "" 4
.
.nf


kubectl delete \-R \-f manifests/<namespace1>/<podName>/Pod
.
.fi
.
.IP "" 0
.
.P
для POD\-разворачивания или
.
.IP "" 4
.
.nf


kubectl delete \-R \-f manifests/<namespace1>/<podName>/Deployment
.
.fi
.
.IP "" 0
.
.P
для Deployment\-разворачивания\.
.
.SS "Тип разворачивания POD"
\fBDeploy\-файл типа Pod (kind: Pod)\fR
.
.P
При типе разворачивания \fBPOD\fR (\fB\-\-type pod\fR или \fB\-t p\fR) в каталоге \fBmanifests/<namespace>/<podName>/Pod/\fR генерируется YML\-файл разворачивания (\fBkind: Pod\fR) \fB<pod1Name>\.yml\fR\.
.
.P
Все контейнеры \fBdocker\-compose сервисов\fR запускаются в рамках одного пода\. Сетевое взаимодействипе между контейнерами одного стека сервисов осуществляется через интерфейс localhost (127\.0\.0\.1)\. В связи с этим в YML\-файл добавляется описание:
.
.IP "" 4
.
.nf


  hostAliases:
    \- ip: 127\.0\.0\.1
      hostnames:
        \- <имя_сервиса1>
        \- <имя_сервиса2>
        \- \.\.\.
.
.fi
.
.IP "" 0
.
.P
Это обеспечивает возможность обращения к портам сервиса по имени сервиса\.
.
.P
\fBФайл описания сервисов (kind: Service)\fR
.
.P
Файл описания сервисов \fB<podName>\.yml\fR генерируется в каталоге \fBmanifests/<namespace>/<podName>/Pod/Service/\fR\. Все порты docker\-сервисов помещаются в один сервис с именем \fB<podName>\fR в пространстве имен \fB<namespace>\fR\. Это обеспечивает в рамках kubernetes\-кластера обращения к портам \fBPod\fR\'а по доменным именам:
.
.IP "" 4
.
.nf


<podName> (в рамках namespace `<namespace>`)
<podName>\.<namespace>
<podName>\.<namespace>\.svc\.cluster\.local
.
.fi
.
.IP "" 0
.
.P
\fBФайлы описания запросов внешних томов (kind: PersistentVolumeClaim)\fR
.
.P
Файлы описания запросов внешних томов с именами \fB<podName>\-<serviceName>\fR размещаются в каталоге \fBmanifests/<namespace>/<podName>/Pod/PersistentVolumeClaim/\fR\. Каждый том имеет имя \fB<podName>\-<serviceName>\fR\. Объем выделяемой дисковой памяти: \fB1Gi\fR\. При необходимости после генерации YML\-файлов этот параметр можно изменить\.
.
.P
\fBФайлы описания локальных томов (kind: PersistentVolume)\fR
.
.P
Для каждого запроса внешнего тома в каталоге \fBmanifests/<namespace>/<podName>/Pod/PersistentVolume/\fR генерируется файл описания локального тома с именем \fB<namespace>\-<podName>\-<serviceName>\.yml\fR\. Каждый описываемый том имеет тот же размер (\fB1Gi\fR), что и запрос на внешний том и связывается с ним через описатель:
.
.IP "" 4
.
.nf


  claimRef:
    name: <podName>\-<serviceName>
    namespace: &ltnamespace>
.
.fi
.
.IP "" 0
.
.P
Подкаталоги создаваемых томов располагаются в каталоге \fB<namespace>\fR каталога, указанным параметром \fB\-\-pvpath\fR (по умолчанию \fB/mnt/PersistentVolumes\fR)\. Имя подкаталогов: \fB<podName>\-<serviceName>\fR\.
.
.P
Если тома создаются для узла \fBkubernetes\fR, работающего в \fBrootless\-режиме\fR, необходимо в параметрах \fB\-\-user(\-u)\fR, \fB\-\-group\fR(\-g)` указать имя и группу (при отсутствии флага совпадает с именем пользователя) от имени которого работают контнейнеры узла кластера\.
.
.SS "Тип разворачивания Deployment"
\fBDeploy\-файлы типа Deployment (kind: Deployment)\fR
.
.P
При типе разворачивания \fBDeployment\fR (\fB\-\-type deployment\fR или \fB\-t d\fR) в каталоге \fBmanifests/<namespace>/<podName>/Deployment/\fR для каждого \fBdocker\-compose сервиса\fR генерируется YML\-файл разворачивания (\fBkind: Deployment\fR) \fBservuceName>\.yml\fR\.
.
.P
Число реплик сервисов (\fBspec\.replicas\fR) устанавливается в 1\-цу\. При необходимости после генерации YML\-файлов для \fBStateless контейнеров\fR (не имеющих внешних томом или имеющие тома только на чтение) число реплик можно увеличить до необходимого значения\.
.
.P
\fBФайлы описания сервисов (kind: Service)\fR
.
.P
Файлы описания сервисов \fB<serviceName>\.yml\fR генерируется в каталоге \fBmanifests/<namespace>/<podName>/Deployment/Service/\fR\.
.
.P
Следует заметить, что если \fBdocker\-compose сервис\fR принимает обращения по какому\-либо порту от других сервисов стека сервисов, до перед запуском \fBPod\'а\fR командой \fBpodman\-compose\fR необходимо \fBобязательно указать этот порт в описателе\fR \fBservices\.<service>\.port\fR \fBdocker\-compose файла\fR\. В противном случае файл описания сервиса \fBmanifests/<namespace>/<podName>/Deployment/Service/<serviceName>\.yml\fR не будет создан и порты контейнера не будет видны под коротким доменным именем \fB<serviceName>\fR другими контейнерами данного разворачивания (\fBDeployment\fR)\.
.
.P
\fBФайлы описания запросов внешних томов (kind: PersistentVolumeClaim) и файлы описания локальных томов (kind: PersistentVolume)\fR
.
.P
Данные файлы генерируются точно таким же образом\. как и для разворачивания типа \fBPod\fR\. Более того, файлы, созданные при разворачивании типа \fBPod\fR можно использовать при разворачивании типа \fBDeployment\fR\. И наоборот\. Но не стоит использовать эти тома одновременно при обоих разворачиваниях\.
.
.SH "OPTIONS"
Флаги команды:
.
.IP "\(bu" 4
\fB\-\-type\fR (\fB\-t\fR) \- тип разворачивания: \fBpod\fR (\fBp\fR), \fBdeployment\fR(\fBd\fR)\. Значение по умолчанию \- \fBpod\fR\.
.
.IP "\(bu" 4
\fB\-\-namespace\fR (\fB\-n\fR) \- kubernetes namespace\. Значение по умолчанию \- \fBdefault\fR\.
.
.IP "\(bu" 4
\fB\-\-dir\fR (\fB\-d\fR) \- каталог для генерируемых манифестов\. Значение по умолчанию \- \fBmanifests\fR\.
.
.IP "\(bu" 4
\fB\-pvpath\fR \- каталог монтирования PersistentVolume томов\. Значение по умолчанию \- \fB/mnt/PersistentVolumes/\fR\.
.
.IP "\(bu" 4
\fB\-\-user\fR (\fB\-u\fR) имя rootless пользователя от которого работает kubernetes \. Значение по умолчанию \- пустая строка\.
.
.IP "\(bu" 4
\fB\-\-group\fR (\fB\-g\fR) \- группа rootless пользователя от которого работает kubernetes\. Значение по умолчанию \- \fB=user\fR\.
.
.IP "\(bu" 4
\fB\-\-output\fR (\fB\-o\fR) \- формат вывода yml или json\.
.
.IP "\(bu" 4
\fB\-\-verbose\fR (\fB\-v\fR) \- отобразить подробности\.
.
.IP "" 0
.
.P
Позиционные параметры:
.
.IP "1." 4
имя_POD\'а\- имя развернутого \fBPOD\fR\'а;
.
.IP "2." 4
имя\-docker\-compose\-файла \- имя docker\-compose файла от которого развернут \fBPOD\fR
.
.IP "" 0
.
.SH "EXAMPLES"
Смотри podman\-compose как средство миграция docker\-compose решений в kubernetes: Разворачивание стека сервисов \fIhttps://www\.altlinux\.org/Podman\-compose/kubernetes#%D0%A0%D0%B0%D0%B7%D0%B2%D0%BE%D1%80%D0%B0%D1%87%D0%B8%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_%D1%81%D1%82%D0%B5%D0%BA%D0%B0_%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D0%BE%D0%B2\fR
